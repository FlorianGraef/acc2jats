//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.10.09 at 05:04:58 PM BST 
//


package uk.ac.ebi.literature.data_citation.ena.jaxb_beans;

import java.math.BigInteger;
import java.util.List;


/**
 * 
 *                     The SPOT_DESCRIPTOR specifies how to decode the individual reads of interest from the 
 *                     monolithic spot sequence.  The spot descriptor contains aspects of the experimental design, 
 *                     platform, and processing information.  There will be two methods of specification: one 
 *                     will be an index into a table of typical decodings, the other being an exact specification.                                      
 *                 
 * 
 * <p>Java class for SpotDescriptorType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="SpotDescriptorType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;choice>
 *         &lt;element name="SPOT_DECODE_SPEC">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence>
 *                   &lt;element name="SPOT_LENGTH" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger" minOccurs="0"/>
 *                   &lt;element name="READ_SPEC" maxOccurs="unbounded">
 *                     &lt;complexType>
 *                       &lt;complexContent>
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                           &lt;sequence>
 *                             &lt;element name="READ_INDEX" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger"/>
 *                             &lt;element name="READ_LABEL" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *                             &lt;element name="READ_CLASS">
 *                               &lt;simpleType>
 *                                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *                                   &lt;enumeration value="Application Read"/>
 *                                   &lt;enumeration value="Technical Read"/>
 *                                 &lt;/restriction>
 *                               &lt;/simpleType>
 *                             &lt;/element>
 *                             &lt;element name="READ_TYPE">
 *                               &lt;simpleType>
 *                                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *                                   &lt;enumeration value="Forward"/>
 *                                   &lt;enumeration value="Reverse"/>
 *                                   &lt;enumeration value="Adapter"/>
 *                                   &lt;enumeration value="Primer"/>
 *                                   &lt;enumeration value="Linker"/>
 *                                   &lt;enumeration value="BarCode"/>
 *                                   &lt;enumeration value="Other"/>
 *                                 &lt;/restriction>
 *                               &lt;/simpleType>
 *                             &lt;/element>
 *                             &lt;choice>
 *                               &lt;element name="RELATIVE_ORDER">
 *                                 &lt;complexType>
 *                                   &lt;complexContent>
 *                                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                                       &lt;attribute name="follows_read_index" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger" />
 *                                       &lt;attribute name="precedes_read_index" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger" />
 *                                     &lt;/restriction>
 *                                   &lt;/complexContent>
 *                                 &lt;/complexType>
 *                               &lt;/element>
 *                               &lt;element name="BASE_COORD" type="{http://www.w3.org/2001/XMLSchema}integer"/>
 *                               &lt;element name="EXPECTED_BASECALL_TABLE">
 *                                 &lt;complexType>
 *                                   &lt;complexContent>
 *                                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                                       &lt;sequence>
 *                                         &lt;element name="BASECALL" maxOccurs="unbounded">
 *                                           &lt;complexType>
 *                                             &lt;simpleContent>
 *                                               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
 *                                                 &lt;attribute name="read_group_tag" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                                                 &lt;attribute name="min_match" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger" />
 *                                                 &lt;attribute name="max_mismatch" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger" />
 *                                                 &lt;attribute name="match_edge">
 *                                                   &lt;simpleType>
 *                                                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *                                                       &lt;enumeration value="full"/>
 *                                                       &lt;enumeration value="start"/>
 *                                                       &lt;enumeration value="end"/>
 *                                                     &lt;/restriction>
 *                                                   &lt;/simpleType>
 *                                                 &lt;/attribute>
 *                                               &lt;/extension>
 *                                             &lt;/simpleContent>
 *                                           &lt;/complexType>
 *                                         &lt;/element>
 *                                       &lt;/sequence>
 *                                       &lt;attribute name="default_length" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger" />
 *                                       &lt;attribute name="base_coord" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger" />
 *                                     &lt;/restriction>
 *                                   &lt;/complexContent>
 *                                 &lt;/complexType>
 *                               &lt;/element>
 *                             &lt;/choice>
 *                           &lt;/sequence>
 *                         &lt;/restriction>
 *                       &lt;/complexContent>
 *                     &lt;/complexType>
 *                   &lt;/element>
 *                 &lt;/sequence>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *       &lt;/choice>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
public interface SpotDescriptorType {


    /**
     * Gets the value of the spotdecodespec property.
     * 
     * @return
     *     possible object is
     *     {@link SpotDescriptorType.SPOTDECODESPEC }
     *     
     */
    SpotDescriptorType.SPOTDECODESPEC getSPOTDECODESPEC();

    /**
     * Sets the value of the spotdecodespec property.
     * 
     * @param value
     *     allowed object is
     *     {@link SpotDescriptorType.SPOTDECODESPEC }
     *     
     */
    void setSPOTDECODESPEC(SpotDescriptorType.SPOTDECODESPEC value);


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="SPOT_LENGTH" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger" minOccurs="0"/>
     *         &lt;element name="READ_SPEC" maxOccurs="unbounded">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 &lt;sequence>
     *                   &lt;element name="READ_INDEX" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger"/>
     *                   &lt;element name="READ_LABEL" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
     *                   &lt;element name="READ_CLASS">
     *                     &lt;simpleType>
     *                       &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
     *                         &lt;enumeration value="Application Read"/>
     *                         &lt;enumeration value="Technical Read"/>
     *                       &lt;/restriction>
     *                     &lt;/simpleType>
     *                   &lt;/element>
     *                   &lt;element name="READ_TYPE">
     *                     &lt;simpleType>
     *                       &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
     *                         &lt;enumeration value="Forward"/>
     *                         &lt;enumeration value="Reverse"/>
     *                         &lt;enumeration value="Adapter"/>
     *                         &lt;enumeration value="Primer"/>
     *                         &lt;enumeration value="Linker"/>
     *                         &lt;enumeration value="BarCode"/>
     *                         &lt;enumeration value="Other"/>
     *                       &lt;/restriction>
     *                     &lt;/simpleType>
     *                   &lt;/element>
     *                   &lt;choice>
     *                     &lt;element name="RELATIVE_ORDER">
     *                       &lt;complexType>
     *                         &lt;complexContent>
     *                           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                             &lt;attribute name="follows_read_index" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger" />
     *                             &lt;attribute name="precedes_read_index" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger" />
     *                           &lt;/restriction>
     *                         &lt;/complexContent>
     *                       &lt;/complexType>
     *                     &lt;/element>
     *                     &lt;element name="BASE_COORD" type="{http://www.w3.org/2001/XMLSchema}integer"/>
     *                     &lt;element name="EXPECTED_BASECALL_TABLE">
     *                       &lt;complexType>
     *                         &lt;complexContent>
     *                           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                             &lt;sequence>
     *                               &lt;element name="BASECALL" maxOccurs="unbounded">
     *                                 &lt;complexType>
     *                                   &lt;simpleContent>
     *                                     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
     *                                       &lt;attribute name="read_group_tag" type="{http://www.w3.org/2001/XMLSchema}string" />
     *                                       &lt;attribute name="min_match" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger" />
     *                                       &lt;attribute name="max_mismatch" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger" />
     *                                       &lt;attribute name="match_edge">
     *                                         &lt;simpleType>
     *                                           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
     *                                             &lt;enumeration value="full"/>
     *                                             &lt;enumeration value="start"/>
     *                                             &lt;enumeration value="end"/>
     *                                           &lt;/restriction>
     *                                         &lt;/simpleType>
     *                                       &lt;/attribute>
     *                                     &lt;/extension>
     *                                   &lt;/simpleContent>
     *                                 &lt;/complexType>
     *                               &lt;/element>
     *                             &lt;/sequence>
     *                             &lt;attribute name="default_length" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger" />
     *                             &lt;attribute name="base_coord" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger" />
     *                           &lt;/restriction>
     *                         &lt;/complexContent>
     *                       &lt;/complexType>
     *                     &lt;/element>
     *                   &lt;/choice>
     *                 &lt;/sequence>
     *               &lt;/restriction>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    public interface SPOTDECODESPEC {


        /**
         * Gets the value of the spotlength property.
         * 
         * @return
         *     possible object is
         *     {@link BigInteger }
         *     
         */
        BigInteger getSPOTLENGTH();

        /**
         * Sets the value of the spotlength property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigInteger }
         *     
         */
        void setSPOTLENGTH(BigInteger value);

        /**
         * Gets the value of the readspecs property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the readspecs property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getREADSPECS().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link SpotDescriptorType.SPOTDECODESPEC.READSPEC }
         * 
         * 
         */
        List<SpotDescriptorType.SPOTDECODESPEC.READSPEC> getREADSPECS();


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;sequence>
         *         &lt;element name="READ_INDEX" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger"/>
         *         &lt;element name="READ_LABEL" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
         *         &lt;element name="READ_CLASS">
         *           &lt;simpleType>
         *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
         *               &lt;enumeration value="Application Read"/>
         *               &lt;enumeration value="Technical Read"/>
         *             &lt;/restriction>
         *           &lt;/simpleType>
         *         &lt;/element>
         *         &lt;element name="READ_TYPE">
         *           &lt;simpleType>
         *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
         *               &lt;enumeration value="Forward"/>
         *               &lt;enumeration value="Reverse"/>
         *               &lt;enumeration value="Adapter"/>
         *               &lt;enumeration value="Primer"/>
         *               &lt;enumeration value="Linker"/>
         *               &lt;enumeration value="BarCode"/>
         *               &lt;enumeration value="Other"/>
         *             &lt;/restriction>
         *           &lt;/simpleType>
         *         &lt;/element>
         *         &lt;choice>
         *           &lt;element name="RELATIVE_ORDER">
         *             &lt;complexType>
         *               &lt;complexContent>
         *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *                   &lt;attribute name="follows_read_index" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger" />
         *                   &lt;attribute name="precedes_read_index" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger" />
         *                 &lt;/restriction>
         *               &lt;/complexContent>
         *             &lt;/complexType>
         *           &lt;/element>
         *           &lt;element name="BASE_COORD" type="{http://www.w3.org/2001/XMLSchema}integer"/>
         *           &lt;element name="EXPECTED_BASECALL_TABLE">
         *             &lt;complexType>
         *               &lt;complexContent>
         *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *                   &lt;sequence>
         *                     &lt;element name="BASECALL" maxOccurs="unbounded">
         *                       &lt;complexType>
         *                         &lt;simpleContent>
         *                           &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
         *                             &lt;attribute name="read_group_tag" type="{http://www.w3.org/2001/XMLSchema}string" />
         *                             &lt;attribute name="min_match" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger" />
         *                             &lt;attribute name="max_mismatch" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger" />
         *                             &lt;attribute name="match_edge">
         *                               &lt;simpleType>
         *                                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
         *                                   &lt;enumeration value="full"/>
         *                                   &lt;enumeration value="start"/>
         *                                   &lt;enumeration value="end"/>
         *                                 &lt;/restriction>
         *                               &lt;/simpleType>
         *                             &lt;/attribute>
         *                           &lt;/extension>
         *                         &lt;/simpleContent>
         *                       &lt;/complexType>
         *                     &lt;/element>
         *                   &lt;/sequence>
         *                   &lt;attribute name="default_length" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger" />
         *                   &lt;attribute name="base_coord" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger" />
         *                 &lt;/restriction>
         *               &lt;/complexContent>
         *             &lt;/complexType>
         *           &lt;/element>
         *         &lt;/choice>
         *       &lt;/sequence>
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        public interface READSPEC {


            /**
             * Gets the value of the readindex property.
             * 
             * @return
             *     possible object is
             *     {@link BigInteger }
             *     
             */
            BigInteger getREADINDEX();

            /**
             * Sets the value of the readindex property.
             * 
             * @param value
             *     allowed object is
             *     {@link BigInteger }
             *     
             */
            void setREADINDEX(BigInteger value);

            /**
             * Gets the value of the readlabel property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            String getREADLABEL();

            /**
             * Sets the value of the readlabel property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            void setREADLABEL(String value);

            /**
             * Gets the value of the readclass property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            String getREADCLASS();

            /**
             * Sets the value of the readclass property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            void setREADCLASS(String value);

            /**
             * Gets the value of the readtype property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            String getREADTYPE();

            /**
             * Sets the value of the readtype property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            void setREADTYPE(String value);

            /**
             * Gets the value of the expectedbasecalltable property.
             * 
             * @return
             *     possible object is
             *     {@link SpotDescriptorType.SPOTDECODESPEC.READSPEC.EXPECTEDBASECALLTABLE }
             *     
             */
            SpotDescriptorType.SPOTDECODESPEC.READSPEC.EXPECTEDBASECALLTABLE getEXPECTEDBASECALLTABLE();

            /**
             * Sets the value of the expectedbasecalltable property.
             * 
             * @param value
             *     allowed object is
             *     {@link SpotDescriptorType.SPOTDECODESPEC.READSPEC.EXPECTEDBASECALLTABLE }
             *     
             */
            void setEXPECTEDBASECALLTABLE(SpotDescriptorType.SPOTDECODESPEC.READSPEC.EXPECTEDBASECALLTABLE value);

            /**
             * Gets the value of the basecoord property.
             * 
             * @return
             *     possible object is
             *     {@link BigInteger }
             *     
             */
            BigInteger getBASECOORD();

            /**
             * Sets the value of the basecoord property.
             * 
             * @param value
             *     allowed object is
             *     {@link BigInteger }
             *     
             */
            void setBASECOORD(BigInteger value);

            /**
             * Gets the value of the relativeorder property.
             * 
             * @return
             *     possible object is
             *     {@link SpotDescriptorType.SPOTDECODESPEC.READSPEC.RELATIVEORDER }
             *     
             */
            SpotDescriptorType.SPOTDECODESPEC.READSPEC.RELATIVEORDER getRELATIVEORDER();

            /**
             * Sets the value of the relativeorder property.
             * 
             * @param value
             *     allowed object is
             *     {@link SpotDescriptorType.SPOTDECODESPEC.READSPEC.RELATIVEORDER }
             *     
             */
            void setRELATIVEORDER(SpotDescriptorType.SPOTDECODESPEC.READSPEC.RELATIVEORDER value);


            /**
             * <p>Java class for anonymous complex type.
             * 
             * <p>The following schema fragment specifies the expected content contained within this class.
             * 
             * <pre>
             * &lt;complexType>
             *   &lt;complexContent>
             *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
             *       &lt;sequence>
             *         &lt;element name="BASECALL" maxOccurs="unbounded">
             *           &lt;complexType>
             *             &lt;simpleContent>
             *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
             *                 &lt;attribute name="read_group_tag" type="{http://www.w3.org/2001/XMLSchema}string" />
             *                 &lt;attribute name="min_match" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger" />
             *                 &lt;attribute name="max_mismatch" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger" />
             *                 &lt;attribute name="match_edge">
             *                   &lt;simpleType>
             *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
             *                       &lt;enumeration value="full"/>
             *                       &lt;enumeration value="start"/>
             *                       &lt;enumeration value="end"/>
             *                     &lt;/restriction>
             *                   &lt;/simpleType>
             *                 &lt;/attribute>
             *               &lt;/extension>
             *             &lt;/simpleContent>
             *           &lt;/complexType>
             *         &lt;/element>
             *       &lt;/sequence>
             *       &lt;attribute name="default_length" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger" />
             *       &lt;attribute name="base_coord" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger" />
             *     &lt;/restriction>
             *   &lt;/complexContent>
             * &lt;/complexType>
             * </pre>
             * 
             * 
             */
            public interface EXPECTEDBASECALLTABLE {


                /**
                 * Gets the value of the basecalls property.
                 * 
                 * <p>
                 * This accessor method returns a reference to the live list,
                 * not a snapshot. Therefore any modification you make to the
                 * returned list will be present inside the JAXB object.
                 * This is why there is not a <CODE>set</CODE> method for the basecalls property.
                 * 
                 * <p>
                 * For example, to add a new item, do as follows:
                 * <pre>
                 *    getBASECALLS().add(newItem);
                 * </pre>
                 * 
                 * 
                 * <p>
                 * Objects of the following type(s) are allowed in the list
                 * {@link SpotDescriptorType.SPOTDECODESPEC.READSPEC.EXPECTEDBASECALLTABLE.BASECALL }
                 * 
                 * 
                 */
                List<SpotDescriptorType.SPOTDECODESPEC.READSPEC.EXPECTEDBASECALLTABLE.BASECALL> getBASECALLS();

                /**
                 * Gets the value of the defaultLength property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link BigInteger }
                 *     
                 */
                BigInteger getDefaultLength();

                /**
                 * Sets the value of the defaultLength property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link BigInteger }
                 *     
                 */
                void setDefaultLength(BigInteger value);

                /**
                 * Gets the value of the baseCoord property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link BigInteger }
                 *     
                 */
                BigInteger getBaseCoord();

                /**
                 * Sets the value of the baseCoord property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link BigInteger }
                 *     
                 */
                void setBaseCoord(BigInteger value);


                /**
                 * <p>Java class for anonymous complex type.
                 * 
                 * <p>The following schema fragment specifies the expected content contained within this class.
                 * 
                 * <pre>
                 * &lt;complexType>
                 *   &lt;simpleContent>
                 *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
                 *       &lt;attribute name="read_group_tag" type="{http://www.w3.org/2001/XMLSchema}string" />
                 *       &lt;attribute name="min_match" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger" />
                 *       &lt;attribute name="max_mismatch" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger" />
                 *       &lt;attribute name="match_edge">
                 *         &lt;simpleType>
                 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
                 *             &lt;enumeration value="full"/>
                 *             &lt;enumeration value="start"/>
                 *             &lt;enumeration value="end"/>
                 *           &lt;/restriction>
                 *         &lt;/simpleType>
                 *       &lt;/attribute>
                 *     &lt;/extension>
                 *   &lt;/simpleContent>
                 * &lt;/complexType>
                 * </pre>
                 * 
                 * 
                 */
                public interface BASECALL {


                    /**
                     * Gets the value of the value property.
                     * 
                     * @return
                     *     possible object is
                     *     {@link String }
                     *     
                     */
                    String getValue();

                    /**
                     * Sets the value of the value property.
                     * 
                     * @param value
                     *     allowed object is
                     *     {@link String }
                     *     
                     */
                    void setValue(String value);

                    /**
                     * Gets the value of the readGroupTag property.
                     * 
                     * @return
                     *     possible object is
                     *     {@link String }
                     *     
                     */
                    String getReadGroupTag();

                    /**
                     * Sets the value of the readGroupTag property.
                     * 
                     * @param value
                     *     allowed object is
                     *     {@link String }
                     *     
                     */
                    void setReadGroupTag(String value);

                    /**
                     * Gets the value of the minMatch property.
                     * 
                     * @return
                     *     possible object is
                     *     {@link BigInteger }
                     *     
                     */
                    BigInteger getMinMatch();

                    /**
                     * Sets the value of the minMatch property.
                     * 
                     * @param value
                     *     allowed object is
                     *     {@link BigInteger }
                     *     
                     */
                    void setMinMatch(BigInteger value);

                    /**
                     * Gets the value of the maxMismatch property.
                     * 
                     * @return
                     *     possible object is
                     *     {@link BigInteger }
                     *     
                     */
                    BigInteger getMaxMismatch();

                    /**
                     * Sets the value of the maxMismatch property.
                     * 
                     * @param value
                     *     allowed object is
                     *     {@link BigInteger }
                     *     
                     */
                    void setMaxMismatch(BigInteger value);

                    /**
                     * Gets the value of the matchEdge property.
                     * 
                     * @return
                     *     possible object is
                     *     {@link String }
                     *     
                     */
                    String getMatchEdge();

                    /**
                     * Sets the value of the matchEdge property.
                     * 
                     * @param value
                     *     allowed object is
                     *     {@link String }
                     *     
                     */
                    void setMatchEdge(String value);

                }

            }


            /**
             * <p>Java class for anonymous complex type.
             * 
             * <p>The following schema fragment specifies the expected content contained within this class.
             * 
             * <pre>
             * &lt;complexType>
             *   &lt;complexContent>
             *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
             *       &lt;attribute name="follows_read_index" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger" />
             *       &lt;attribute name="precedes_read_index" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger" />
             *     &lt;/restriction>
             *   &lt;/complexContent>
             * &lt;/complexType>
             * </pre>
             * 
             * 
             */
            public interface RELATIVEORDER {


                /**
                 * Gets the value of the followsReadIndex property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link BigInteger }
                 *     
                 */
                BigInteger getFollowsReadIndex();

                /**
                 * Sets the value of the followsReadIndex property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link BigInteger }
                 *     
                 */
                void setFollowsReadIndex(BigInteger value);

                /**
                 * Gets the value of the precedesReadIndex property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link BigInteger }
                 *     
                 */
                BigInteger getPrecedesReadIndex();

                /**
                 * Sets the value of the precedesReadIndex property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link BigInteger }
                 *     
                 */
                void setPrecedesReadIndex(BigInteger value);

            }

        }

    }

}

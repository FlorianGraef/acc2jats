//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.10.09 at 05:04:58 PM BST 
//


package uk.ac.ebi.literature.data_citation.ena.jaxb_beans.impl;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;
import uk.ac.ebi.literature.data_citation.ena.jaxb_beans.SpotDescriptorType;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SpotDescriptorType", namespace = "SRA.common", propOrder = {
    "spotdecodespec"
})
public class SpotDescriptorTypeImpl
    implements SpotDescriptorType
{

    @XmlElement(name = "SPOT_DECODE_SPEC", type = SpotDescriptorTypeImpl.SPOTDECODESPECImpl.class)
    protected SpotDescriptorTypeImpl.SPOTDECODESPECImpl spotdecodespec;

    public SpotDescriptorType.SPOTDECODESPEC getSPOTDECODESPEC() {
        return spotdecodespec;
    }

    public void setSPOTDECODESPEC(SpotDescriptorType.SPOTDECODESPEC value) {
        this.spotdecodespec = ((SpotDescriptorTypeImpl.SPOTDECODESPECImpl) value);
    }

    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "spotlength",
        "readspecs"
    })
    public static class SPOTDECODESPECImpl
        implements SpotDescriptorType.SPOTDECODESPEC
    {

        @XmlElement(name = "SPOT_LENGTH")
        @XmlSchemaType(name = "nonNegativeInteger")
        protected BigInteger spotlength;
        @XmlElement(name = "READ_SPEC", required = true, type = SpotDescriptorTypeImpl.SPOTDECODESPECImpl.READSPECImpl.class)
        protected List<SpotDescriptorType.SPOTDECODESPEC.READSPEC> readspecs;

        public BigInteger getSPOTLENGTH() {
            return spotlength;
        }

        public void setSPOTLENGTH(BigInteger value) {
            this.spotlength = value;
        }

        public List<SpotDescriptorType.SPOTDECODESPEC.READSPEC> getREADSPECS() {
            if (readspecs == null) {
                readspecs = new ArrayList<SpotDescriptorType.SPOTDECODESPEC.READSPEC>();
            }
            return this.readspecs;
        }

        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "readindex",
            "readlabel",
            "readclass",
            "readtype",
            "expectedbasecalltable",
            "basecoord",
            "relativeorder"
        })
        public static class READSPECImpl
            implements SpotDescriptorType.SPOTDECODESPEC.READSPEC
        {

            @XmlElement(name = "READ_INDEX", required = true)
            @XmlSchemaType(name = "nonNegativeInteger")
            protected BigInteger readindex;
            @XmlElement(name = "READ_LABEL")
            protected String readlabel;
            @XmlElement(name = "READ_CLASS", required = true)
            protected String readclass;
            @XmlElement(name = "READ_TYPE", required = true, defaultValue = "Forward")
            protected String readtype;
            @XmlElement(name = "EXPECTED_BASECALL_TABLE", type = SpotDescriptorTypeImpl.SPOTDECODESPECImpl.READSPECImpl.EXPECTEDBASECALLTABLEImpl.class)
            protected SpotDescriptorTypeImpl.SPOTDECODESPECImpl.READSPECImpl.EXPECTEDBASECALLTABLEImpl expectedbasecalltable;
            @XmlElement(name = "BASE_COORD")
            protected BigInteger basecoord;
            @XmlElement(name = "RELATIVE_ORDER", type = SpotDescriptorTypeImpl.SPOTDECODESPECImpl.READSPECImpl.RELATIVEORDERImpl.class)
            protected SpotDescriptorTypeImpl.SPOTDECODESPECImpl.READSPECImpl.RELATIVEORDERImpl relativeorder;

            public BigInteger getREADINDEX() {
                return readindex;
            }

            public void setREADINDEX(BigInteger value) {
                this.readindex = value;
            }

            public String getREADLABEL() {
                return readlabel;
            }

            public void setREADLABEL(String value) {
                this.readlabel = value;
            }

            public String getREADCLASS() {
                return readclass;
            }

            public void setREADCLASS(String value) {
                this.readclass = value;
            }

            public String getREADTYPE() {
                return readtype;
            }

            public void setREADTYPE(String value) {
                this.readtype = value;
            }

            public SpotDescriptorType.SPOTDECODESPEC.READSPEC.EXPECTEDBASECALLTABLE getEXPECTEDBASECALLTABLE() {
                return expectedbasecalltable;
            }

            public void setEXPECTEDBASECALLTABLE(SpotDescriptorType.SPOTDECODESPEC.READSPEC.EXPECTEDBASECALLTABLE value) {
                this.expectedbasecalltable = ((SpotDescriptorTypeImpl.SPOTDECODESPECImpl.READSPECImpl.EXPECTEDBASECALLTABLEImpl) value);
            }

            public BigInteger getBASECOORD() {
                return basecoord;
            }

            public void setBASECOORD(BigInteger value) {
                this.basecoord = value;
            }

            public SpotDescriptorType.SPOTDECODESPEC.READSPEC.RELATIVEORDER getRELATIVEORDER() {
                return relativeorder;
            }

            public void setRELATIVEORDER(SpotDescriptorType.SPOTDECODESPEC.READSPEC.RELATIVEORDER value) {
                this.relativeorder = ((SpotDescriptorTypeImpl.SPOTDECODESPECImpl.READSPECImpl.RELATIVEORDERImpl) value);
            }

            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "basecalls"
            })
            public static class EXPECTEDBASECALLTABLEImpl
                implements SpotDescriptorType.SPOTDECODESPEC.READSPEC.EXPECTEDBASECALLTABLE
            {

                @XmlElement(name = "BASECALL", required = true, type = SpotDescriptorTypeImpl.SPOTDECODESPECImpl.READSPECImpl.EXPECTEDBASECALLTABLEImpl.BASECALLImpl.class)
                protected List<SpotDescriptorType.SPOTDECODESPEC.READSPEC.EXPECTEDBASECALLTABLE.BASECALL> basecalls;
                @XmlAttribute(name = "default_length")
                @XmlSchemaType(name = "nonNegativeInteger")
                protected BigInteger defaultLength;
                @XmlAttribute(name = "base_coord")
                @XmlSchemaType(name = "nonNegativeInteger")
                protected BigInteger baseCoord;

                public List<SpotDescriptorType.SPOTDECODESPEC.READSPEC.EXPECTEDBASECALLTABLE.BASECALL> getBASECALLS() {
                    if (basecalls == null) {
                        basecalls = new ArrayList<SpotDescriptorType.SPOTDECODESPEC.READSPEC.EXPECTEDBASECALLTABLE.BASECALL>();
                    }
                    return this.basecalls;
                }

                public BigInteger getDefaultLength() {
                    return defaultLength;
                }

                public void setDefaultLength(BigInteger value) {
                    this.defaultLength = value;
                }

                public BigInteger getBaseCoord() {
                    return baseCoord;
                }

                public void setBaseCoord(BigInteger value) {
                    this.baseCoord = value;
                }

                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "value"
                })
                public static class BASECALLImpl
                    implements SpotDescriptorType.SPOTDECODESPEC.READSPEC.EXPECTEDBASECALLTABLE.BASECALL
                {

                    @XmlValue
                    protected String value;
                    @XmlAttribute(name = "read_group_tag")
                    protected String readGroupTag;
                    @XmlAttribute(name = "min_match")
                    @XmlSchemaType(name = "nonNegativeInteger")
                    protected BigInteger minMatch;
                    @XmlAttribute(name = "max_mismatch")
                    @XmlSchemaType(name = "nonNegativeInteger")
                    protected BigInteger maxMismatch;
                    @XmlAttribute(name = "match_edge")
                    protected String matchEdge;

                    public String getValue() {
                        return value;
                    }

                    public void setValue(String value) {
                        this.value = value;
                    }

                    public String getReadGroupTag() {
                        return readGroupTag;
                    }

                    public void setReadGroupTag(String value) {
                        this.readGroupTag = value;
                    }

                    public BigInteger getMinMatch() {
                        return minMatch;
                    }

                    public void setMinMatch(BigInteger value) {
                        this.minMatch = value;
                    }

                    public BigInteger getMaxMismatch() {
                        return maxMismatch;
                    }

                    public void setMaxMismatch(BigInteger value) {
                        this.maxMismatch = value;
                    }

                    public String getMatchEdge() {
                        return matchEdge;
                    }

                    public void setMatchEdge(String value) {
                        this.matchEdge = value;
                    }

                }

            }

            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "")
            public static class RELATIVEORDERImpl
                implements SpotDescriptorType.SPOTDECODESPEC.READSPEC.RELATIVEORDER
            {

                @XmlAttribute(name = "follows_read_index")
                @XmlSchemaType(name = "nonNegativeInteger")
                protected BigInteger followsReadIndex;
                @XmlAttribute(name = "precedes_read_index")
                @XmlSchemaType(name = "nonNegativeInteger")
                protected BigInteger precedesReadIndex;

                public BigInteger getFollowsReadIndex() {
                    return followsReadIndex;
                }

                public void setFollowsReadIndex(BigInteger value) {
                    this.followsReadIndex = value;
                }

                public BigInteger getPrecedesReadIndex() {
                    return precedesReadIndex;
                }

                public void setPrecedesReadIndex(BigInteger value) {
                    this.precedesReadIndex = value;
                }

            }

        }

    }

}

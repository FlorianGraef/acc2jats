//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.10.09 at 05:04:58 PM BST 
//


package uk.ac.ebi.literature.data_citation.ena.jaxb_beans.impl;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import javax.xml.datatype.XMLGregorianCalendar;
import uk.ac.ebi.literature.data_citation.ena.jaxb_beans.AttributeType;
import uk.ac.ebi.literature.data_citation.ena.jaxb_beans.IdentifierType;
import uk.ac.ebi.literature.data_citation.ena.jaxb_beans.OrganismType;
import uk.ac.ebi.literature.data_citation.ena.jaxb_beans.PROJECT;
import uk.ac.ebi.literature.data_citation.ena.jaxb_beans.PublicationType;
import uk.ac.ebi.literature.data_citation.ena.jaxb_beans.URLType;
import uk.ac.ebi.literature.data_citation.ena.jaxb_beans.XRefType;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ProjectType", propOrder = {
    "identifiers",
    "name",
    "title",
    "description",
    "publications",
    "collaborators",
    "umbrellaproject",
    "submissionproject",
    "relatedprojects",
    "relatedchromosomes",
    "projectlinks",
    "projectattributes"
})
@XmlRootElement(name = "PROJECT")
public class PROJECTImpl implements PROJECT
{

    @XmlElement(name = "IDENTIFIERS", type = IdentifierTypeImpl.class)
    protected IdentifierTypeImpl identifiers;
    @XmlElement(name = "NAME")
    protected String name;
    @XmlElement(name = "TITLE", required = true)
    protected String title;
    @XmlElement(name = "DESCRIPTION")
    protected String description;
    @XmlElement(name = "PUBLICATIONS", type = PROJECTImpl.PUBLICATIONSImpl.class)
    protected PROJECTImpl.PUBLICATIONSImpl publications;
    @XmlElement(name = "COLLABORATORS", type = PROJECTImpl.COLLABORATORSImpl.class)
    protected PROJECTImpl.COLLABORATORSImpl collaborators;
    @XmlElement(name = "UMBRELLA_PROJECT", type = PROJECTImpl.UMBRELLAPROJECTImpl.class)
    protected PROJECTImpl.UMBRELLAPROJECTImpl umbrellaproject;
    @XmlElement(name = "SUBMISSION_PROJECT", type = PROJECTImpl.SUBMISSIONPROJECTImpl.class)
    protected PROJECTImpl.SUBMISSIONPROJECTImpl submissionproject;
    @XmlElement(name = "RELATED_PROJECTS", type = PROJECTImpl.RELATEDPROJECTSImpl.class)
    protected PROJECTImpl.RELATEDPROJECTSImpl relatedprojects;
    @XmlElement(name = "RELATED_CHROMOSOMES", type = PROJECTImpl.RELATEDCHROMOSOMESImpl.class)
    protected PROJECTImpl.RELATEDCHROMOSOMESImpl relatedchromosomes;
    @XmlElement(name = "PROJECT_LINKS", type = PROJECTImpl.PROJECTLINKSImpl.class)
    protected PROJECTImpl.PROJECTLINKSImpl projectlinks;
    @XmlElement(name = "PROJECT_ATTRIBUTES", type = PROJECTImpl.PROJECTATTRIBUTESImpl.class)
    protected PROJECTImpl.PROJECTATTRIBUTESImpl projectattributes;
    @XmlAttribute(name = "first_public")
    @XmlSchemaType(name = "date")
    protected XMLGregorianCalendar firstPublic;
    @XmlAttribute(name = "alias")
    protected String alias;
    @XmlAttribute(name = "center_name")
    protected String centerName;
    @XmlAttribute(name = "broker_name")
    protected String brokerName;
    @XmlAttribute(name = "accession")
    protected String accession;

    public IdentifierType getIDENTIFIERS() {
        return identifiers;
    }

    public void setIDENTIFIERS(IdentifierType value) {
        this.identifiers = ((IdentifierTypeImpl) value);
    }

    public String getNAME() {
        return name;
    }

    public void setNAME(String value) {
        this.name = value;
    }

    public String getTITLE() {
        return title;
    }

    public void setTITLE(String value) {
        this.title = value;
    }

    public String getDESCRIPTION() {
        return description;
    }

    public void setDESCRIPTION(String value) {
        this.description = value;
    }

    public PROJECT.PUBLICATIONS getPUBLICATIONS() {
        return publications;
    }

    public void setPUBLICATIONS(PROJECT.PUBLICATIONS value) {
        this.publications = ((PROJECTImpl.PUBLICATIONSImpl) value);
    }

    public PROJECT.COLLABORATORS getCOLLABORATORS() {
        return collaborators;
    }

    public void setCOLLABORATORS(PROJECT.COLLABORATORS value) {
        this.collaborators = ((PROJECTImpl.COLLABORATORSImpl) value);
    }

    public PROJECT.UMBRELLAPROJECT getUMBRELLAPROJECT() {
        return umbrellaproject;
    }

    public void setUMBRELLAPROJECT(PROJECT.UMBRELLAPROJECT value) {
        this.umbrellaproject = ((PROJECTImpl.UMBRELLAPROJECTImpl) value);
    }

    public PROJECT.SUBMISSIONPROJECT getSUBMISSIONPROJECT() {
        return submissionproject;
    }

    public void setSUBMISSIONPROJECT(PROJECT.SUBMISSIONPROJECT value) {
        this.submissionproject = ((PROJECTImpl.SUBMISSIONPROJECTImpl) value);
    }

    public PROJECT.RELATEDPROJECTS getRELATEDPROJECTS() {
        return relatedprojects;
    }

    public void setRELATEDPROJECTS(PROJECT.RELATEDPROJECTS value) {
        this.relatedprojects = ((PROJECTImpl.RELATEDPROJECTSImpl) value);
    }

    public PROJECT.RELATEDCHROMOSOMES getRELATEDCHROMOSOMES() {
        return relatedchromosomes;
    }

    public void setRELATEDCHROMOSOMES(PROJECT.RELATEDCHROMOSOMES value) {
        this.relatedchromosomes = ((PROJECTImpl.RELATEDCHROMOSOMESImpl) value);
    }

    public PROJECT.PROJECTLINKS getPROJECTLINKS() {
        return projectlinks;
    }

    public void setPROJECTLINKS(PROJECT.PROJECTLINKS value) {
        this.projectlinks = ((PROJECTImpl.PROJECTLINKSImpl) value);
    }

    public PROJECT.PROJECTATTRIBUTES getPROJECTATTRIBUTES() {
        return projectattributes;
    }

    public void setPROJECTATTRIBUTES(PROJECT.PROJECTATTRIBUTES value) {
        this.projectattributes = ((PROJECTImpl.PROJECTATTRIBUTESImpl) value);
    }

    public XMLGregorianCalendar getFirstPublic() {
        return firstPublic;
    }

    public void setFirstPublic(XMLGregorianCalendar value) {
        this.firstPublic = value;
    }

    public String getAlias() {
        return alias;
    }

    public void setAlias(String value) {
        this.alias = value;
    }

    public String getCenterName() {
        return centerName;
    }

    public void setCenterName(String value) {
        this.centerName = value;
    }

    public String getBrokerName() {
        return brokerName;
    }

    public void setBrokerName(String value) {
        this.brokerName = value;
    }

    public String getAccession() {
        return accession;
    }

    public void setAccession(String value) {
        this.accession = value;
    }

    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "collaborators"
    })
    public static class COLLABORATORSImpl
        implements PROJECT.COLLABORATORS
    {

        @XmlElement(name = "COLLABORATOR", required = true)
        protected List<String> collaborators;

        public List<String> getCOLLABORATORS() {
            if (collaborators == null) {
                collaborators = new ArrayList<String>();
            }
            return this.collaborators;
        }

    }

    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "projectattributes"
    })
    public static class PROJECTATTRIBUTESImpl
        implements PROJECT.PROJECTATTRIBUTES
    {

        @XmlElement(name = "PROJECT_ATTRIBUTE", required = true, type = AttributeTypeImpl.class)
        protected List<AttributeType> projectattributes;

        public List<AttributeType> getPROJECTATTRIBUTES() {
            if (projectattributes == null) {
                projectattributes = new ArrayList<AttributeType>();
            }
            return this.projectattributes;
        }

    }

    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "projectlinks"
    })
    public static class PROJECTLINKSImpl
        implements PROJECT.PROJECTLINKS
    {

        @XmlElement(name = "PROJECT_LINK", required = true, type = PROJECTImpl.PROJECTLINKSImpl.PROJECTLINKImpl.class)
        protected List<PROJECT.PROJECTLINKS.PROJECTLINK> projectlinks;

        public List<PROJECT.PROJECTLINKS.PROJECTLINK> getPROJECTLINKS() {
            if (projectlinks == null) {
                projectlinks = new ArrayList<PROJECT.PROJECTLINKS.PROJECTLINK>();
            }
            return this.projectlinks;
        }

        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "urllink",
            "xreflink"
        })
        public static class PROJECTLINKImpl
            implements PROJECT.PROJECTLINKS.PROJECTLINK
        {

            @XmlElement(name = "URL_LINK", type = URLTypeImpl.class)
            protected URLTypeImpl urllink;
            @XmlElement(name = "XREF_LINK", type = XRefTypeImpl.class)
            protected XRefTypeImpl xreflink;

            public URLType getURLLINK() {
                return urllink;
            }

            public void setURLLINK(URLType value) {
                this.urllink = ((URLTypeImpl) value);
            }

            public XRefType getXREFLINK() {
                return xreflink;
            }

            public void setXREFLINK(XRefType value) {
                this.xreflink = ((XRefTypeImpl) value);
            }

        }

    }

    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "publications"
    })
    public static class PUBLICATIONSImpl
        implements PROJECT.PUBLICATIONS
    {

        @XmlElement(name = "PUBLICATION", required = true, type = PublicationTypeImpl.class)
        protected List<PublicationType> publications;

        public List<PublicationType> getPUBLICATIONS() {
            if (publications == null) {
                publications = new ArrayList<PublicationType>();
            }
            return this.publications;
        }

    }

    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "relatedchromosomes"
    })
    public static class RELATEDCHROMOSOMESImpl
        implements PROJECT.RELATEDCHROMOSOMES
    {

        @XmlElement(name = "RELATED_CHROMOSOME", required = true, type = PROJECTImpl.RELATEDCHROMOSOMESImpl.RELATEDCHROMOSOMEImpl.class)
        protected List<PROJECT.RELATEDCHROMOSOMES.RELATEDCHROMOSOME> relatedchromosomes;

        public List<PROJECT.RELATEDCHROMOSOMES.RELATEDCHROMOSOME> getRELATEDCHROMOSOMES() {
            if (relatedchromosomes == null) {
                relatedchromosomes = new ArrayList<PROJECT.RELATEDCHROMOSOMES.RELATEDCHROMOSOME>();
            }
            return this.relatedchromosomes;
        }

        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {

        })
        public static class RELATEDCHROMOSOMEImpl
            implements PROJECT.RELATEDCHROMOSOMES.RELATEDCHROMOSOME
        {

            @XmlElement(name = "NAME")
            protected String name;
            @XmlElement(name = "ORDER")
            protected BigInteger order;
            @XmlElement(name = "TYPE")
            @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
            protected String type;
            @XmlElement(name = "LOCATION")
            @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
            protected String location;
            @XmlAttribute(name = "accession", required = true)
            protected String accession;

            public String getNAME() {
                return name;
            }

            public void setNAME(String value) {
                this.name = value;
            }

            public BigInteger getORDER() {
                return order;
            }

            public void setORDER(BigInteger value) {
                this.order = value;
            }

            public String getTYPE() {
                return type;
            }

            public void setTYPE(String value) {
                this.type = value;
            }

            public String getLOCATION() {
                return location;
            }

            public void setLOCATION(String value) {
                this.location = value;
            }

            public String getAccession() {
                return accession;
            }

            public void setAccession(String value) {
                this.accession = value;
            }

        }

    }

    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "relatedprojects"
    })
    public static class RELATEDPROJECTSImpl
        implements PROJECT.RELATEDPROJECTS
    {

        @XmlElement(name = "RELATED_PROJECT", required = true, type = PROJECTImpl.RELATEDPROJECTSImpl.RELATEDPROJECTImpl.class)
        protected List<PROJECT.RELATEDPROJECTS.RELATEDPROJECT> relatedprojects;

        public List<PROJECT.RELATEDPROJECTS.RELATEDPROJECT> getRELATEDPROJECTS() {
            if (relatedprojects == null) {
                relatedprojects = new ArrayList<PROJECT.RELATEDPROJECTS.RELATEDPROJECT>();
            }
            return this.relatedprojects;
        }

        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "peerproject",
            "childproject",
            "parentproject"
        })
        public static class RELATEDPROJECTImpl
            implements PROJECT.RELATEDPROJECTS.RELATEDPROJECT
        {

            @XmlElement(name = "PEER_PROJECT", type = PROJECTImpl.RELATEDPROJECTSImpl.RELATEDPROJECTImpl.PEERPROJECTImpl.class)
            protected PROJECTImpl.RELATEDPROJECTSImpl.RELATEDPROJECTImpl.PEERPROJECTImpl peerproject;
            @XmlElement(name = "CHILD_PROJECT", type = PROJECTImpl.RELATEDPROJECTSImpl.RELATEDPROJECTImpl.CHILDPROJECTImpl.class)
            protected PROJECTImpl.RELATEDPROJECTSImpl.RELATEDPROJECTImpl.CHILDPROJECTImpl childproject;
            @XmlElement(name = "PARENT_PROJECT", type = PROJECTImpl.RELATEDPROJECTSImpl.RELATEDPROJECTImpl.PARENTPROJECTImpl.class)
            protected PROJECTImpl.RELATEDPROJECTSImpl.RELATEDPROJECTImpl.PARENTPROJECTImpl parentproject;

            public PROJECT.RELATEDPROJECTS.RELATEDPROJECT.PEERPROJECT getPEERPROJECT() {
                return peerproject;
            }

            public void setPEERPROJECT(PROJECT.RELATEDPROJECTS.RELATEDPROJECT.PEERPROJECT value) {
                this.peerproject = ((PROJECTImpl.RELATEDPROJECTSImpl.RELATEDPROJECTImpl.PEERPROJECTImpl) value);
            }

            public PROJECT.RELATEDPROJECTS.RELATEDPROJECT.CHILDPROJECT getCHILDPROJECT() {
                return childproject;
            }

            public void setCHILDPROJECT(PROJECT.RELATEDPROJECTS.RELATEDPROJECT.CHILDPROJECT value) {
                this.childproject = ((PROJECTImpl.RELATEDPROJECTSImpl.RELATEDPROJECTImpl.CHILDPROJECTImpl) value);
            }

            public PROJECT.RELATEDPROJECTS.RELATEDPROJECT.PARENTPROJECT getPARENTPROJECT() {
                return parentproject;
            }

            public void setPARENTPROJECT(PROJECT.RELATEDPROJECTS.RELATEDPROJECT.PARENTPROJECT value) {
                this.parentproject = ((PROJECTImpl.RELATEDPROJECTSImpl.RELATEDPROJECTImpl.PARENTPROJECTImpl) value);
            }

            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "")
            public static class CHILDPROJECTImpl
                implements PROJECT.RELATEDPROJECTS.RELATEDPROJECT.CHILDPROJECT
            {

                @XmlAttribute(name = "accession", required = true)
                protected String accession;

                public String getAccession() {
                    return accession;
                }

                public void setAccession(String value) {
                    this.accession = value;
                }

            }

            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "")
            public static class PARENTPROJECTImpl
                implements PROJECT.RELATEDPROJECTS.RELATEDPROJECT.PARENTPROJECT
            {

                @XmlAttribute(name = "accession", required = true)
                protected String accession;

                public String getAccession() {
                    return accession;
                }

                public void setAccession(String value) {
                    this.accession = value;
                }

            }

            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "")
            public static class PEERPROJECTImpl
                implements PROJECT.RELATEDPROJECTS.RELATEDPROJECT.PEERPROJECT
            {

                @XmlAttribute(name = "accession", required = true)
                protected String accession;

                public String getAccession() {
                    return accession;
                }

                public void setAccession(String value) {
                    this.accession = value;
                }

            }

        }

    }

    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "sequencingproject",
        "organism",
        "objectives"
    })
    public static class SUBMISSIONPROJECTImpl
        implements PROJECT.SUBMISSIONPROJECT
    {

        @XmlElement(name = "SEQUENCING_PROJECT", type = PROJECTImpl.SUBMISSIONPROJECTImpl.SEQUENCINGPROJECTImpl.class)
        protected PROJECTImpl.SUBMISSIONPROJECTImpl.SEQUENCINGPROJECTImpl sequencingproject;
        @XmlElement(name = "ORGANISM", type = OrganismTypeImpl.class)
        protected OrganismTypeImpl organism;
        @XmlElement(name = "OBJECTIVE")
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        protected List<String> objectives;
        @XmlAttribute(name = "scope", required = true)
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        protected String scope;
        @XmlAttribute(name = "material", required = true)
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        protected String material;
        @XmlAttribute(name = "selection")
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        protected String selection;

        public PROJECT.SUBMISSIONPROJECT.SEQUENCINGPROJECT getSEQUENCINGPROJECT() {
            return sequencingproject;
        }

        public void setSEQUENCINGPROJECT(PROJECT.SUBMISSIONPROJECT.SEQUENCINGPROJECT value) {
            this.sequencingproject = ((PROJECTImpl.SUBMISSIONPROJECTImpl.SEQUENCINGPROJECTImpl) value);
        }

        public OrganismType getORGANISM() {
            return organism;
        }

        public void setORGANISM(OrganismType value) {
            this.organism = ((OrganismTypeImpl) value);
        }

        public List<String> getOBJECTIVES() {
            if (objectives == null) {
                objectives = new ArrayList<String>();
            }
            return this.objectives;
        }

        public String getScope() {
            return scope;
        }

        public void setScope(String value) {
            this.scope = value;
        }

        public String getMaterial() {
            return material;
        }

        public void setMaterial(String value) {
            this.material = value;
        }

        public String getSelection() {
            return selection;
        }

        public void setSelection(String value) {
            this.selection = value;
        }

        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "locustagprefixes"
        })
        public static class SEQUENCINGPROJECTImpl
            implements PROJECT.SUBMISSIONPROJECT.SEQUENCINGPROJECT
        {

            @XmlElement(name = "LOCUS_TAG_PREFIX")
            @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
            @XmlSchemaType(name = "token")
            protected List<String> locustagprefixes;

            public List<String> getLOCUSTAGPREFIXES() {
                if (locustagprefixes == null) {
                    locustagprefixes = new ArrayList<String>();
                }
                return this.locustagprefixes;
            }

        }

    }

    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "organism"
    })
    public static class UMBRELLAPROJECTImpl
        implements PROJECT.UMBRELLAPROJECT
    {

        @XmlElement(name = "ORGANISM", type = OrganismTypeImpl.class)
        protected OrganismTypeImpl organism;

        public OrganismType getORGANISM() {
            return organism;
        }

        public void setORGANISM(OrganismType value) {
            this.organism = ((OrganismTypeImpl) value);
        }

    }

}

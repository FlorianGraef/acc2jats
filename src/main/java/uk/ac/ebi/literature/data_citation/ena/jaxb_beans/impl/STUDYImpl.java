//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.10.09 at 05:04:58 PM BST 
//


package uk.ac.ebi.literature.data_citation.ena.jaxb_beans.impl;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import uk.ac.ebi.literature.data_citation.ena.jaxb_beans.AttributeType;
import uk.ac.ebi.literature.data_citation.ena.jaxb_beans.IdentifierType;
import uk.ac.ebi.literature.data_citation.ena.jaxb_beans.LinkType;
import uk.ac.ebi.literature.data_citation.ena.jaxb_beans.STUDY;
import uk.ac.ebi.literature.data_citation.ena.jaxb_beans.XRefType;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "StudyType", propOrder = {
    "identifiers",
    "descriptor",
    "studylinks",
    "studyattributes"
})
@XmlRootElement(name = "STUDY")
public class STUDYImpl implements STUDY
{

    @XmlElement(name = "IDENTIFIERS", type = IdentifierTypeImpl.class)
    protected IdentifierTypeImpl identifiers;
    @XmlElement(name = "DESCRIPTOR", required = true, type = STUDYImpl.DESCRIPTORImpl.class)
    protected STUDYImpl.DESCRIPTORImpl descriptor;
    @XmlElement(name = "STUDY_LINKS", type = STUDYImpl.STUDYLINKSImpl.class)
    protected STUDYImpl.STUDYLINKSImpl studylinks;
    @XmlElement(name = "STUDY_ATTRIBUTES", type = STUDYImpl.STUDYATTRIBUTESImpl.class)
    protected STUDYImpl.STUDYATTRIBUTESImpl studyattributes;
    @XmlAttribute(name = "alias")
    protected String alias;
    @XmlAttribute(name = "center_name")
    protected String centerName;
    @XmlAttribute(name = "broker_name")
    protected String brokerName;
    @XmlAttribute(name = "accession")
    protected String accession;

    public IdentifierType getIDENTIFIERS() {
        return identifiers;
    }

    public void setIDENTIFIERS(IdentifierType value) {
        this.identifiers = ((IdentifierTypeImpl) value);
    }

    public STUDY.DESCRIPTOR getDESCRIPTOR() {
        return descriptor;
    }

    public void setDESCRIPTOR(STUDY.DESCRIPTOR value) {
        this.descriptor = ((STUDYImpl.DESCRIPTORImpl) value);
    }

    public STUDY.STUDYLINKS getSTUDYLINKS() {
        return studylinks;
    }

    public void setSTUDYLINKS(STUDY.STUDYLINKS value) {
        this.studylinks = ((STUDYImpl.STUDYLINKSImpl) value);
    }

    public STUDY.STUDYATTRIBUTES getSTUDYATTRIBUTES() {
        return studyattributes;
    }

    public void setSTUDYATTRIBUTES(STUDY.STUDYATTRIBUTES value) {
        this.studyattributes = ((STUDYImpl.STUDYATTRIBUTESImpl) value);
    }

    public String getAlias() {
        return alias;
    }

    public void setAlias(String value) {
        this.alias = value;
    }

    public String getCenterName() {
        return centerName;
    }

    public void setCenterName(String value) {
        this.centerName = value;
    }

    public String getBrokerName() {
        return brokerName;
    }

    public void setBrokerName(String value) {
        this.brokerName = value;
    }

    public String getAccession() {
        return accession;
    }

    public void setAccession(String value) {
        this.accession = value;
    }

    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {

    })
    public static class DESCRIPTORImpl
        implements STUDY.DESCRIPTOR
    {

        @XmlElement(name = "STUDY_TITLE")
        protected String studytitle;
        @XmlElement(name = "STUDY_TYPE", type = STUDYImpl.DESCRIPTORImpl.STUDYTYPEImpl.class)
        protected STUDYImpl.DESCRIPTORImpl.STUDYTYPEImpl studytype;
        @XmlElement(name = "STUDY_ABSTRACT")
        protected String studyabstract;
        @XmlElement(name = "CENTER_NAME")
        protected String centername;
        @XmlElement(name = "CENTER_PROJECT_NAME")
        protected String centerprojectname;
        @XmlElement(name = "PROJECT_ID")
        @XmlSchemaType(name = "nonNegativeInteger")
        protected BigInteger projectid;
        @XmlElement(name = "RELATED_STUDIES", type = STUDYImpl.DESCRIPTORImpl.RELATEDSTUDIESImpl.class)
        protected STUDYImpl.DESCRIPTORImpl.RELATEDSTUDIESImpl relatedstudies;
        @XmlElement(name = "STUDY_DESCRIPTION")
        protected String studydescription;

        public String getSTUDYTITLE() {
            return studytitle;
        }

        public void setSTUDYTITLE(String value) {
            this.studytitle = value;
        }

        public STUDY.DESCRIPTOR.STUDYTYPE getSTUDYTYPE() {
            return studytype;
        }

        public void setSTUDYTYPE(STUDY.DESCRIPTOR.STUDYTYPE value) {
            this.studytype = ((STUDYImpl.DESCRIPTORImpl.STUDYTYPEImpl) value);
        }

        public String getSTUDYABSTRACT() {
            return studyabstract;
        }

        public void setSTUDYABSTRACT(String value) {
            this.studyabstract = value;
        }

        public String getCENTERNAME() {
            return centername;
        }

        public void setCENTERNAME(String value) {
            this.centername = value;
        }

        public String getCENTERPROJECTNAME() {
            return centerprojectname;
        }

        public void setCENTERPROJECTNAME(String value) {
            this.centerprojectname = value;
        }

        public BigInteger getPROJECTID() {
            return projectid;
        }

        public void setPROJECTID(BigInteger value) {
            this.projectid = value;
        }

        public STUDY.DESCRIPTOR.RELATEDSTUDIES getRELATEDSTUDIES() {
            return relatedstudies;
        }

        public void setRELATEDSTUDIES(STUDY.DESCRIPTOR.RELATEDSTUDIES value) {
            this.relatedstudies = ((STUDYImpl.DESCRIPTORImpl.RELATEDSTUDIESImpl) value);
        }

        public String getSTUDYDESCRIPTION() {
            return studydescription;
        }

        public void setSTUDYDESCRIPTION(String value) {
            this.studydescription = value;
        }

        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "relatedstudies"
        })
        public static class RELATEDSTUDIESImpl
            implements STUDY.DESCRIPTOR.RELATEDSTUDIES
        {

            @XmlElement(name = "RELATED_STUDY", required = true, type = STUDYImpl.DESCRIPTORImpl.RELATEDSTUDIESImpl.RELATEDSTUDYImpl.class)
            protected List<STUDY.DESCRIPTOR.RELATEDSTUDIES.RELATEDSTUDY> relatedstudies;

            public List<STUDY.DESCRIPTOR.RELATEDSTUDIES.RELATEDSTUDY> getRELATEDSTUDIES() {
                if (relatedstudies == null) {
                    relatedstudies = new ArrayList<STUDY.DESCRIPTOR.RELATEDSTUDIES.RELATEDSTUDY>();
                }
                return this.relatedstudies;
            }

            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "relatedlink",
                "isprimary"
            })
            public static class RELATEDSTUDYImpl
                implements STUDY.DESCRIPTOR.RELATEDSTUDIES.RELATEDSTUDY
            {

                @XmlElement(name = "RELATED_LINK", required = true, type = XRefTypeImpl.class)
                protected XRefTypeImpl relatedlink;
                @XmlElement(name = "IS_PRIMARY")
                protected boolean isprimary;

                public XRefType getRELATEDLINK() {
                    return relatedlink;
                }

                public void setRELATEDLINK(XRefType value) {
                    this.relatedlink = ((XRefTypeImpl) value);
                }

                public boolean isISPRIMARY() {
                    return isprimary;
                }

                public void setISPRIMARY(boolean value) {
                    this.isprimary = value;
                }

            }

        }

        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "")
        public static class STUDYTYPEImpl
            implements STUDY.DESCRIPTOR.STUDYTYPE
        {

            @XmlAttribute(name = "existing_study_type", required = true)
            protected String existingStudyType;
            @XmlAttribute(name = "new_study_type")
            protected String newStudyType;

            public String getExistingStudyType() {
                return existingStudyType;
            }

            public void setExistingStudyType(String value) {
                this.existingStudyType = value;
            }

            public String getNewStudyType() {
                return newStudyType;
            }

            public void setNewStudyType(String value) {
                this.newStudyType = value;
            }

        }

    }

    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "studyattributes"
    })
    public static class STUDYATTRIBUTESImpl
        implements STUDY.STUDYATTRIBUTES
    {

        @XmlElement(name = "STUDY_ATTRIBUTE", required = true, type = AttributeTypeImpl.class)
        protected List<AttributeType> studyattributes;

        public List<AttributeType> getSTUDYATTRIBUTES() {
            if (studyattributes == null) {
                studyattributes = new ArrayList<AttributeType>();
            }
            return this.studyattributes;
        }

    }

    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "studylinks"
    })
    public static class STUDYLINKSImpl
        implements STUDY.STUDYLINKS
    {

        @XmlElement(name = "STUDY_LINK", required = true, type = LinkTypeImpl.class)
        protected List<LinkType> studylinks;

        public List<LinkType> getSTUDYLINKS() {
            if (studylinks == null) {
                studylinks = new ArrayList<LinkType>();
            }
            return this.studylinks;
        }

    }

}

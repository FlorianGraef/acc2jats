//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.10.09 at 05:04:58 PM BST 
//


package uk.ac.ebi.literature.data_citation.ena.jaxb_beans.impl;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import uk.ac.ebi.literature.data_citation.ena.jaxb_beans.ANALYSIS;
import uk.ac.ebi.literature.data_citation.ena.jaxb_beans.AnalysisFileType;
import uk.ac.ebi.literature.data_citation.ena.jaxb_beans.AttributeType;
import uk.ac.ebi.literature.data_citation.ena.jaxb_beans.IdentifierType;
import uk.ac.ebi.literature.data_citation.ena.jaxb_beans.LinkType;
import uk.ac.ebi.literature.data_citation.ena.jaxb_beans.ReferenceSequenceType;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "AnalysisType", propOrder = {
    "identifiers",
    "title",
    "description",
    "studyref",
    "samplereves",
    "experimentreves",
    "runreves",
    "analysisreves",
    "analysistype",
    "files",
    "analysislinks",
    "analysisattributes"
})
@XmlRootElement(name = "ANALYSIS")
public class ANALYSISImpl implements ANALYSIS
{

    @XmlElement(name = "IDENTIFIERS", type = IdentifierTypeImpl.class)
    protected IdentifierTypeImpl identifiers;
    @XmlElement(name = "TITLE", required = true)
    protected String title;
    @XmlElement(name = "DESCRIPTION", required = true)
    protected String description;
    @XmlElement(name = "STUDY_REF", type = ANALYSISImpl.STUDYREFImpl.class)
    protected ANALYSISImpl.STUDYREFImpl studyref;
    @XmlElement(name = "SAMPLE_REF", type = ANALYSISImpl.SAMPLEREFImpl.class)
    protected List<ANALYSIS.SAMPLEREF> samplereves;
    @XmlElement(name = "EXPERIMENT_REF", type = ANALYSISImpl.EXPERIMENTREFImpl.class)
    protected List<ANALYSIS.EXPERIMENTREF> experimentreves;
    @XmlElement(name = "RUN_REF", type = ANALYSISImpl.RUNREFImpl.class)
    protected List<ANALYSIS.RUNREF> runreves;
    @XmlElement(name = "ANALYSIS_REF", type = ANALYSISImpl.ANALYSISREFImpl.class)
    protected List<ANALYSIS.ANALYSISREF> analysisreves;
    @XmlElement(name = "ANALYSIS_TYPE", required = true, type = ANALYSISImpl.ANALYSISTYPEImpl.class)
    protected ANALYSISImpl.ANALYSISTYPEImpl analysistype;
    @XmlElement(name = "FILES", required = true, type = ANALYSISImpl.FILESImpl.class)
    protected ANALYSISImpl.FILESImpl files;
    @XmlElement(name = "ANALYSIS_LINKS", type = ANALYSISImpl.ANALYSISLINKSImpl.class)
    protected ANALYSISImpl.ANALYSISLINKSImpl analysislinks;
    @XmlElement(name = "ANALYSIS_ATTRIBUTES", type = ANALYSISImpl.ANALYSISATTRIBUTESImpl.class)
    protected ANALYSISImpl.ANALYSISATTRIBUTESImpl analysisattributes;
    @XmlAttribute(name = "analysis_center")
    protected String analysisCenter;
    @XmlAttribute(name = "analysis_date")
    @XmlSchemaType(name = "dateTime")
    protected XMLGregorianCalendar analysisDate;
    @XmlAttribute(name = "alias")
    protected String alias;
    @XmlAttribute(name = "center_name")
    protected String centerName;
    @XmlAttribute(name = "broker_name")
    protected String brokerName;
    @XmlAttribute(name = "accession")
    protected String accession;

    public IdentifierType getIDENTIFIERS() {
        return identifiers;
    }

    public void setIDENTIFIERS(IdentifierType value) {
        this.identifiers = ((IdentifierTypeImpl) value);
    }

    public String getTITLE() {
        return title;
    }

    public void setTITLE(String value) {
        this.title = value;
    }

    public String getDESCRIPTION() {
        return description;
    }

    public void setDESCRIPTION(String value) {
        this.description = value;
    }

    public ANALYSIS.STUDYREF getSTUDYREF() {
        return studyref;
    }

    public void setSTUDYREF(ANALYSIS.STUDYREF value) {
        this.studyref = ((ANALYSISImpl.STUDYREFImpl) value);
    }

    public List<ANALYSIS.SAMPLEREF> getSAMPLEREVES() {
        if (samplereves == null) {
            samplereves = new ArrayList<ANALYSIS.SAMPLEREF>();
        }
        return this.samplereves;
    }

    public List<ANALYSIS.EXPERIMENTREF> getEXPERIMENTREVES() {
        if (experimentreves == null) {
            experimentreves = new ArrayList<ANALYSIS.EXPERIMENTREF>();
        }
        return this.experimentreves;
    }

    public List<ANALYSIS.RUNREF> getRUNREVES() {
        if (runreves == null) {
            runreves = new ArrayList<ANALYSIS.RUNREF>();
        }
        return this.runreves;
    }

    public List<ANALYSIS.ANALYSISREF> getANALYSISREVES() {
        if (analysisreves == null) {
            analysisreves = new ArrayList<ANALYSIS.ANALYSISREF>();
        }
        return this.analysisreves;
    }

    public ANALYSIS.ANALYSISTYPE getANALYSISTYPE() {
        return analysistype;
    }

    public void setANALYSISTYPE(ANALYSIS.ANALYSISTYPE value) {
        this.analysistype = ((ANALYSISImpl.ANALYSISTYPEImpl) value);
    }

    public ANALYSIS.FILES getFILES() {
        return files;
    }

    public void setFILES(ANALYSIS.FILES value) {
        this.files = ((ANALYSISImpl.FILESImpl) value);
    }

    public ANALYSIS.ANALYSISLINKS getANALYSISLINKS() {
        return analysislinks;
    }

    public void setANALYSISLINKS(ANALYSIS.ANALYSISLINKS value) {
        this.analysislinks = ((ANALYSISImpl.ANALYSISLINKSImpl) value);
    }

    public ANALYSIS.ANALYSISATTRIBUTES getANALYSISATTRIBUTES() {
        return analysisattributes;
    }

    public void setANALYSISATTRIBUTES(ANALYSIS.ANALYSISATTRIBUTES value) {
        this.analysisattributes = ((ANALYSISImpl.ANALYSISATTRIBUTESImpl) value);
    }

    public String getAnalysisCenter() {
        return analysisCenter;
    }

    public void setAnalysisCenter(String value) {
        this.analysisCenter = value;
    }

    public XMLGregorianCalendar getAnalysisDate() {
        return analysisDate;
    }

    public void setAnalysisDate(XMLGregorianCalendar value) {
        this.analysisDate = value;
    }

    public String getAlias() {
        return alias;
    }

    public void setAlias(String value) {
        this.alias = value;
    }

    public String getCenterName() {
        return centerName;
    }

    public void setCenterName(String value) {
        this.centerName = value;
    }

    public String getBrokerName() {
        return brokerName;
    }

    public void setBrokerName(String value) {
        this.brokerName = value;
    }

    public String getAccession() {
        return accession;
    }

    public void setAccession(String value) {
        this.accession = value;
    }

    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "analysisattributes"
    })
    public static class ANALYSISATTRIBUTESImpl
        implements ANALYSIS.ANALYSISATTRIBUTES
    {

        @XmlElement(name = "ANALYSIS_ATTRIBUTE", required = true, type = AttributeTypeImpl.class)
        protected List<AttributeType> analysisattributes;

        public List<AttributeType> getANALYSISATTRIBUTES() {
            if (analysisattributes == null) {
                analysisattributes = new ArrayList<AttributeType>();
            }
            return this.analysisattributes;
        }

    }

    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "analysislinks"
    })
    public static class ANALYSISLINKSImpl
        implements ANALYSIS.ANALYSISLINKS
    {

        @XmlElement(name = "ANALYSIS_LINK", required = true, type = LinkTypeImpl.class)
        protected List<LinkType> analysislinks;

        public List<LinkType> getANALYSISLINKS() {
            if (analysislinks == null) {
                analysislinks = new ArrayList<LinkType>();
            }
            return this.analysislinks;
        }

    }

    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "identifiers"
    })
    public static class ANALYSISREFImpl
        implements ANALYSIS.ANALYSISREF
    {

        @XmlElement(name = "IDENTIFIERS", type = IdentifierTypeImpl.class)
        protected IdentifierTypeImpl identifiers;
        @XmlAttribute(name = "label")
        protected String label;
        @XmlAttribute(name = "refname")
        protected String refname;
        @XmlAttribute(name = "refcenter")
        protected String refcenter;
        @XmlAttribute(name = "accession")
        protected String accession;

        public IdentifierType getIDENTIFIERS() {
            return identifiers;
        }

        public void setIDENTIFIERS(IdentifierType value) {
            this.identifiers = ((IdentifierTypeImpl) value);
        }

        public String getLabel() {
            return label;
        }

        public void setLabel(String value) {
            this.label = value;
        }

        public String getRefname() {
            return refname;
        }

        public void setRefname(String value) {
            this.refname = value;
        }

        public String getRefcenter() {
            return refcenter;
        }

        public void setRefcenter(String value) {
            this.refcenter = value;
        }

        public String getAccession() {
            return accession;
        }

        public void setAccession(String value) {
            this.accession = value;
        }

    }

    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "processedreads",
        "samplephenotype",
        "referencesequence",
        "sequenceannotation",
        "sequenceassembly",
        "sequencevariation",
        "referencealignment"
    })
    public static class ANALYSISTYPEImpl
        implements ANALYSIS.ANALYSISTYPE
    {

        @XmlElement(name = "PROCESSED_READS")
        protected Object processedreads;
        @XmlElement(name = "SAMPLE_PHENOTYPE", type = ANALYSISImpl.ANALYSISTYPEImpl.SAMPLEPHENOTYPEImpl.class)
        protected ANALYSISImpl.ANALYSISTYPEImpl.SAMPLEPHENOTYPEImpl samplephenotype;
        @XmlElement(name = "REFERENCE_SEQUENCE")
        protected Object referencesequence;
        @XmlElement(name = "SEQUENCE_ANNOTATION", type = ANALYSISImpl.ANALYSISTYPEImpl.SEQUENCEANNOTATIONImpl.class)
        protected ANALYSISImpl.ANALYSISTYPEImpl.SEQUENCEANNOTATIONImpl sequenceannotation;
        @XmlElement(name = "SEQUENCE_ASSEMBLY", type = ANALYSISImpl.ANALYSISTYPEImpl.SEQUENCEASSEMBLYImpl.class)
        protected ANALYSISImpl.ANALYSISTYPEImpl.SEQUENCEASSEMBLYImpl sequenceassembly;
        @XmlElement(name = "SEQUENCE_VARIATION", type = ANALYSISImpl.ANALYSISTYPEImpl.SEQUENCEVARIATIONImpl.class)
        protected ANALYSISImpl.ANALYSISTYPEImpl.SEQUENCEVARIATIONImpl sequencevariation;
        @XmlElement(name = "REFERENCE_ALIGNMENT", type = ReferenceSequenceTypeImpl.class)
        protected ReferenceSequenceTypeImpl referencealignment;

        public Object getPROCESSEDREADS() {
            return processedreads;
        }

        public void setPROCESSEDREADS(Object value) {
            this.processedreads = value;
        }

        public ANALYSIS.ANALYSISTYPE.SAMPLEPHENOTYPE getSAMPLEPHENOTYPE() {
            return samplephenotype;
        }

        public void setSAMPLEPHENOTYPE(ANALYSIS.ANALYSISTYPE.SAMPLEPHENOTYPE value) {
            this.samplephenotype = ((ANALYSISImpl.ANALYSISTYPEImpl.SAMPLEPHENOTYPEImpl) value);
        }

        public Object getREFERENCESEQUENCE() {
            return referencesequence;
        }

        public void setREFERENCESEQUENCE(Object value) {
            this.referencesequence = value;
        }

        public ANALYSIS.ANALYSISTYPE.SEQUENCEANNOTATION getSEQUENCEANNOTATION() {
            return sequenceannotation;
        }

        public void setSEQUENCEANNOTATION(ANALYSIS.ANALYSISTYPE.SEQUENCEANNOTATION value) {
            this.sequenceannotation = ((ANALYSISImpl.ANALYSISTYPEImpl.SEQUENCEANNOTATIONImpl) value);
        }

        public ANALYSIS.ANALYSISTYPE.SEQUENCEASSEMBLY getSEQUENCEASSEMBLY() {
            return sequenceassembly;
        }

        public void setSEQUENCEASSEMBLY(ANALYSIS.ANALYSISTYPE.SEQUENCEASSEMBLY value) {
            this.sequenceassembly = ((ANALYSISImpl.ANALYSISTYPEImpl.SEQUENCEASSEMBLYImpl) value);
        }

        public ANALYSIS.ANALYSISTYPE.SEQUENCEVARIATION getSEQUENCEVARIATION() {
            return sequencevariation;
        }

        public void setSEQUENCEVARIATION(ANALYSIS.ANALYSISTYPE.SEQUENCEVARIATION value) {
            this.sequencevariation = ((ANALYSISImpl.ANALYSISTYPEImpl.SEQUENCEVARIATIONImpl) value);
        }

        public ReferenceSequenceType getREFERENCEALIGNMENT() {
            return referencealignment;
        }

        public void setREFERENCEALIGNMENT(ReferenceSequenceType value) {
            this.referencealignment = ((ReferenceSequenceTypeImpl) value);
        }

        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "")
        public static class SAMPLEPHENOTYPEImpl
            implements ANALYSIS.ANALYSISTYPE.SAMPLEPHENOTYPE
        {


        }

        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "")
        public static class SEQUENCEANNOTATIONImpl
            implements ANALYSIS.ANALYSISTYPE.SEQUENCEANNOTATION
        {


        }

        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "name",
            "partial",
            "coverage",
            "program",
            "platform",
            "mingaplength",
            "moltype"
        })
        public static class SEQUENCEASSEMBLYImpl
            implements ANALYSIS.ANALYSISTYPE.SEQUENCEASSEMBLY
        {

            @XmlElement(name = "NAME", required = true)
            protected String name;
            @XmlElement(name = "PARTIAL")
            protected boolean partial;
            @XmlElement(name = "COVERAGE", required = true)
            protected String coverage;
            @XmlElement(name = "PROGRAM", required = true)
            protected String program;
            @XmlElement(name = "PLATFORM", required = true)
            protected String platform;
            @XmlElement(name = "MIN_GAP_LENGTH")
            protected BigInteger mingaplength;
            @XmlElement(name = "MOL_TYPE")
            protected String moltype;

            public String getNAME() {
                return name;
            }

            public void setNAME(String value) {
                this.name = value;
            }

            public boolean isPARTIAL() {
                return partial;
            }

            public void setPARTIAL(boolean value) {
                this.partial = value;
            }

            public String getCOVERAGE() {
                return coverage;
            }

            public void setCOVERAGE(String value) {
                this.coverage = value;
            }

            public String getPROGRAM() {
                return program;
            }

            public void setPROGRAM(String value) {
                this.program = value;
            }

            public String getPLATFORM() {
                return platform;
            }

            public void setPLATFORM(String value) {
                this.platform = value;
            }

            public BigInteger getMINGAPLENGTH() {
                return mingaplength;
            }

            public void setMINGAPLENGTH(BigInteger value) {
                this.mingaplength = value;
            }

            public String getMOLTYPE() {
                return moltype;
            }

            public void setMOLTYPE(String value) {
                this.moltype = value;
            }

        }

        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "experimenttypes",
            "program",
            "platform",
            "imputation"
        })
        public static class SEQUENCEVARIATIONImpl
            extends ReferenceSequenceTypeImpl
            implements ANALYSIS.ANALYSISTYPE.SEQUENCEVARIATION
        {

            @XmlElement(name = "EXPERIMENT_TYPE")
            protected List<String> experimenttypes;
            @XmlElement(name = "PROGRAM")
            protected String program;
            @XmlElement(name = "PLATFORM")
            protected String platform;
            @XmlElement(name = "IMPUTATION")
            protected Boolean imputation;

            public List<String> getEXPERIMENTTYPES() {
                if (experimenttypes == null) {
                    experimenttypes = new ArrayList<String>();
                }
                return this.experimenttypes;
            }

            public String getPROGRAM() {
                return program;
            }

            public void setPROGRAM(String value) {
                this.program = value;
            }

            public String getPLATFORM() {
                return platform;
            }

            public void setPLATFORM(String value) {
                this.platform = value;
            }

            public Boolean isIMPUTATION() {
                return imputation;
            }

            public void setIMPUTATION(Boolean value) {
                this.imputation = value;
            }

        }

    }

    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "identifiers"
    })
    public static class EXPERIMENTREFImpl
        implements ANALYSIS.EXPERIMENTREF
    {

        @XmlElement(name = "IDENTIFIERS", type = IdentifierTypeImpl.class)
        protected IdentifierTypeImpl identifiers;
        @XmlAttribute(name = "refname")
        protected String refname;
        @XmlAttribute(name = "refcenter")
        protected String refcenter;
        @XmlAttribute(name = "accession")
        protected String accession;

        public IdentifierType getIDENTIFIERS() {
            return identifiers;
        }

        public void setIDENTIFIERS(IdentifierType value) {
            this.identifiers = ((IdentifierTypeImpl) value);
        }

        public String getRefname() {
            return refname;
        }

        public void setRefname(String value) {
            this.refname = value;
        }

        public String getRefcenter() {
            return refcenter;
        }

        public void setRefcenter(String value) {
            this.refcenter = value;
        }

        public String getAccession() {
            return accession;
        }

        public void setAccession(String value) {
            this.accession = value;
        }

    }

    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "files"
    })
    public static class FILESImpl
        implements ANALYSIS.FILES
    {

        @XmlElement(name = "FILE", required = true, type = AnalysisFileTypeImpl.class)
        protected List<AnalysisFileType> files;

        public List<AnalysisFileType> getFILES() {
            if (files == null) {
                files = new ArrayList<AnalysisFileType>();
            }
            return this.files;
        }

    }

    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "identifiers"
    })
    public static class RUNREFImpl
        implements ANALYSIS.RUNREF
    {

        @XmlElement(name = "IDENTIFIERS", type = IdentifierTypeImpl.class)
        protected IdentifierTypeImpl identifiers;
        @XmlAttribute(name = "label")
        protected String label;
        @XmlAttribute(name = "refname")
        protected String refname;
        @XmlAttribute(name = "refcenter")
        protected String refcenter;
        @XmlAttribute(name = "accession")
        protected String accession;

        public IdentifierType getIDENTIFIERS() {
            return identifiers;
        }

        public void setIDENTIFIERS(IdentifierType value) {
            this.identifiers = ((IdentifierTypeImpl) value);
        }

        public String getLabel() {
            return label;
        }

        public void setLabel(String value) {
            this.label = value;
        }

        public String getRefname() {
            return refname;
        }

        public void setRefname(String value) {
            this.refname = value;
        }

        public String getRefcenter() {
            return refcenter;
        }

        public void setRefcenter(String value) {
            this.refcenter = value;
        }

        public String getAccession() {
            return accession;
        }

        public void setAccession(String value) {
            this.accession = value;
        }

    }

    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "identifiers"
    })
    public static class SAMPLEREFImpl
        implements ANALYSIS.SAMPLEREF
    {

        @XmlElement(name = "IDENTIFIERS", type = IdentifierTypeImpl.class)
        protected IdentifierTypeImpl identifiers;
        @XmlAttribute(name = "label")
        protected String label;
        @XmlAttribute(name = "refname")
        protected String refname;
        @XmlAttribute(name = "refcenter")
        protected String refcenter;
        @XmlAttribute(name = "accession")
        protected String accession;

        public IdentifierType getIDENTIFIERS() {
            return identifiers;
        }

        public void setIDENTIFIERS(IdentifierType value) {
            this.identifiers = ((IdentifierTypeImpl) value);
        }

        public String getLabel() {
            return label;
        }

        public void setLabel(String value) {
            this.label = value;
        }

        public String getRefname() {
            return refname;
        }

        public void setRefname(String value) {
            this.refname = value;
        }

        public String getRefcenter() {
            return refcenter;
        }

        public void setRefcenter(String value) {
            this.refcenter = value;
        }

        public String getAccession() {
            return accession;
        }

        public void setAccession(String value) {
            this.accession = value;
        }

    }

    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "identifiers"
    })
    public static class STUDYREFImpl
        implements ANALYSIS.STUDYREF
    {

        @XmlElement(name = "IDENTIFIERS", type = IdentifierTypeImpl.class)
        protected IdentifierTypeImpl identifiers;
        @XmlAttribute(name = "refname")
        protected String refname;
        @XmlAttribute(name = "refcenter")
        protected String refcenter;
        @XmlAttribute(name = "accession")
        protected String accession;

        public IdentifierType getIDENTIFIERS() {
            return identifiers;
        }

        public void setIDENTIFIERS(IdentifierType value) {
            this.identifiers = ((IdentifierTypeImpl) value);
        }

        public String getRefname() {
            return refname;
        }

        public void setRefname(String value) {
            this.refname = value;
        }

        public String getRefcenter() {
            return refcenter;
        }

        public void setRefcenter(String value) {
            this.refcenter = value;
        }

        public String getAccession() {
            return accession;
        }

        public void setAccession(String value) {
            this.accession = value;
        }

    }

}
